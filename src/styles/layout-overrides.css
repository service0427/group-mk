/* 레이아웃 오버라이드 스타일 */

/* 전체 레이아웃 스타일 */
html, body {
  overflow: auto;
  min-height: 100%;
}

/* 모바일에서 자연스러운 스크롤 허용 */
@media (max-width: 1023px) {
  html, body {
    overflow: visible;
    height: auto;
    min-height: 100vh;
  }
}

/* 사이드바 스타일 변경 */
.sidebar {
  transition: width 0.3s ease;
  will-change: width; /* 성능 최적화 */
  contain: layout style size; /* 레이아웃 컨테인먼트 추가 */
}

/* 모바일 스타일 */
@media (max-width: 1023px) {
  .header, .footer {
    left: 0 !important;
    width: 100% !important;
  }

  main.content {
    margin-top: 4rem;
    padding-bottom: 2.5rem; /* 푸터 높이만큼 패딩 추가 - 축소된 높이에 맞춤 */
  }
}

/* 헤더 및 푸터 위치와 스타일 조정 */
@media (min-width: 1024px) {
  .stand.sidebar-fixed.header-fixed .header,
  .stand.sidebar-fixed.header-fixed .footer {
    left: var(--tw-sidebar-width) !important; /* 사이드바 너비만큼 왼쪽으로 이동 */
    width: calc(100% - var(--tw-sidebar-width)) !important; /* 너비 재조정 */
    z-index: 20; /* z-index 설정 */
    will-change: transform; /* 성능 최적화 */
    contain: layout paint; /* 레이아웃 컨테인먼트 추가 */
  }
}

/* 사이드바 축소 시 메뉴 라벨과 서브메뉴 변경 */
.sidebar-collapse .sidebar .menu-item-text {
  display: none;
}

.sidebar-collapse .sidebar .menu-sub {
  position: absolute;
  left: 100%;
  top: 0;
  min-width: 200px;
  background: var(--tw-page-bg);
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 0.5rem;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  z-index: 100;
}

/* 다크 모드 조정 */
.dark .sidebar-collapse .sidebar .menu-sub {
  background: var(--tw-page-bg-dark);
  border-color: rgba(255, 255, 255, 0.1);
}

/* 메인 컨텐츠 영역 조정 */
.wrapper {
  transition: padding-left 0.3s ease;
  overflow: visible;
  min-height: 100vh;
  padding-left: 0 !important; /* 왼쪽 패딩 제거 */
  margin-left: 0 !important; /* 왼쪽 마진 제거 */
  contain: layout; /* 레이아웃 컨테인먼트 추가 */
}

/* 사이드바 고정 시 wrapper 패딩 오버라이드 */
.stand.sidebar-fixed .wrapper,
.stand.header-fixed .wrapper,
.stand.sidebar-fixed.header-fixed .wrapper,
.stand.layout-initialized .wrapper {
  padding-inline-start: 0 !important;
  padding-left: 0 !important;
  margin-left: 0 !important;
  /* 상단 패딩/마진은 제거하지 않고 기본값 유지 */
}

/* 레이아웃 컨테이너 구조 오버라이드 */
.stand .flex.h-screen.overflow-hidden {
  display: flex;
  flex-direction: row;
  width: 100%;
  height: 100vh; /* 전체 높이 설정 */
  overflow: hidden;
}

/* 모바일에서는 overflow 허용 */
@media (max-width: 1023px) {
  .stand .flex.h-screen.overflow-hidden {
    height: auto;
    min-height: 100vh;
    overflow: visible;
  }
}

/* 메인 콘텐츠 영역 스타일 재정의 */
main.content {
  padding-top: 2.5rem !important; /* 상단 패딩 줄임 */
  overflow-y: auto;
  overflow-x: hidden;
  width: 100%; /* 콘텐츠 영역 너비 100%로 설정 */
  height: auto; /* 콘텐츠 높이에 맞춰 자동으로 조정 */
  position: relative; /* 로더 포지셔닝 위해 추가 */
  contain: content; /* 컨텐츠 컨테인먼트 추가 */
}

/* 모바일에서 콘텐츠 영역 스크롤 개선 */
@media (max-width: 1023px) {
  main.content {
    overflow: visible;
    height: auto;
    min-height: calc(100vh - 4rem); /* 헤더 높이 제외 */
  }
}

/* 공지사항이 있는 경우 마진 추가 */
body.has-notice main.content {
  margin-top: calc(var(--header-height) + 28px); /* 헤더 + 공지사항 높이 */
}

/* 공지사항이 없는 경우 기본 마진 */
body:not(.has-notice) main.content {
  margin-top: var(--header-height); /* 헤더 높이만큼만 마진 */
}

/* 컨텐츠 영역 페이드 트랜지션 - 로딩 중/로딩 완료 상태 */
.content-loading {
  opacity: 0.6;
  transition: opacity 0.3s ease-in-out;
}

.content-loaded {
  opacity: 1;
  transition: opacity 0.3s ease-in-out;
}

/* 페이지 전환 애니메이션 */
.content-container {
  animation-duration: 0.3s;
  animation-fill-mode: both;
  animation-timing-function: ease-in-out;
  will-change: opacity, transform;
  transform: translateZ(0);
  transition: opacity 0.3s ease-in-out, filter 0.3s ease-in-out;
}

.content-container:not(.pointer-events-none) {
  animation-name: fadeIn;
}

/* 페이드 인 애니메이션 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 로딩 상태에서의 스타일 */
.content-container.pointer-events-none {
  opacity: 0.6;
  filter: blur(0.5px);
  transition: opacity 0.2s ease-in-out, filter 0.2s ease-in-out;
}

/* 컨텐츠 로더 스타일 개선 */
.content .MuiCircularProgress-root {
  z-index: 15;
}

/* 사이드바 및 wrapper 영역의 상대적 너비 설정 */
@media (min-width: 1024px) {
  .stand .sidebar {
    flex-shrink: 0; /* 사이드바 크기 고정 */
    contain: layout size style; /* 컨테인먼트 추가 */
  }
  
  .stand .wrapper {
    flex-grow: 1; /* wrapper가 나머지 공간 차지 */
    width: calc(100% - var(--tw-sidebar-width)); /* wrapper 너비를 명시적으로 설정 */
    contain: layout; /* 레이아웃 컨테인먼트 추가 */
  }
}

/* 레이아웃 리렌더링을 최소화하기 위한 추가 CSS 변수 사용 */
:root {
  --content-transition: opacity 0.15s ease-in-out;
  --content-background: var(--tw-page-bg);
  --content-background-dark: var(--tw-page-bg-dark);
  --footer-height: 2.5rem; /* 푸터 높이 CSS 변수 - text-2sm 크기에 맞게 축소 */
  --header-height: 4rem;  /* 64px 헤더 높이 */
  --notice-height: 28px;  /* 공지사항 높이 (기본값) */
  --notice-visible: 0;    /* 공지사항 표시 여부 (0: 숨김, 1: 표시) */
  --content-top-margin: 70px; /* 컨텐츠 상단 마진 (고정값) */
}

/* 푸터 스타일 최적화 */
.footer {
  height: var(--footer-height) !important; /* !important 추가로 강제 적용 */
  min-height: var(--footer-height) !important; /* 최소 높이도 설정 */
  max-height: var(--footer-height) !important; /* 최대 높이도 설정 */
  transition: left 0.3s ease, width 0.3s ease;
  will-change: transform, left, width;
  backface-visibility: hidden;
}

/* 컨텐츠 영역에 대한 추가 최적화 */
main.content {
  transition: var(--content-transition);
  background-color: var(--content-background);
  transform: translateZ(0); /* GPU 가속 활성화 */
  backface-visibility: hidden; /* 렌더링 성능 향상 */
}

.dark main.content {
  background-color: var(--content-background-dark);
}

/* 헤더와 사이드바의 렌더링 성능 향상 */
.header, .sidebar {
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* CommonTemplate 스타일 개선 */
.page-template-wrapper {
  position: relative;
  z-index: 10;
  padding-top: 0.75rem;
  margin-top: 0 !important; /* 인라인 마진 제거 */
  min-height: calc(100vh - var(--content-top-margin) - var(--footer-height) - 2rem);
  contain: content;
}

/* 공지사항 여부에 따른 마진 처리 */
body.has-notice .page-template-wrapper {
  margin-top: calc(var(--content-top-margin) + var(--notice-height) - 5px) !important;
}

body:not(.has-notice) .page-template-wrapper {
  margin-top: var(--content-top-margin) !important;
}

/* 컨텐츠 영역 스타일 */
.template-content {
  position: relative;
  margin-bottom: calc(var(--footer-height) + 0.25rem);
  min-height: fit-content; /* 콘텐츠 높이에 맞춰 자동으로 조정 */
}